--EXERCISE 1.1:
1.

SELECT STAFF_NAME,DESIGN_CODE FROM STAFF_MASTER WHERE (HIREDATE<'01-JAN-2003') AND STAFF_SAL BETWEEN 12000 AND 25000;


SELECT STAFF_NAME, DESIGN_CODE AS CODE FROM STAFF_MASTER WHERE STAFF_SAL>=12000 AND STAFF_SAL<=25000 AND HIREDATE<'01-JAN-2003';

2.

SELECT STAFF_CODE,STAFF_NAME,DEPT_CODE FROM STAFF_MASTER WHERE (MONTHS_BETWEEN(SYSDATE,HIREDATE))>=216 ORDER BY HIREDATE DESC;

3.

SELECT * FROM STAFF_MASTER WHERE MGR_CODE IS NULL;

4.

SELECT * FROM BOOK_MASTER WHERE BOOK_PUB_YEAR BETWEEN 2001 AND 2004 AND BOOK_NAME LIKE '%"&"%';

5.

SELECT STAFF_NAME FROM STAFF_MASTER  WHERE STAFF_NAME LIKE '%_%';

--SELECT * FROM STAFF_MASTER WHERE STAFF_NAME LIKE '%_%';

--EXERCISE 2.1:

1.

SELECT STAFF_NAME, '$'|| STAFF_SAL AS STAFF_SAL FROM STAFF_MASTER;

2.

SELECT STUDENT_NAME,TO_CHAR(STUDENT_DOB,'MONTH DD YYYY') AS STUDENT_DOB FROM STUDENT_MASTER WHERE TO_CHAR(STUDENT_DOB,'DAY') LIKE ('%SUNDAY%') OR TO_CHAR(STUDENT_DOB,'DAY') LIKE ('%SATURDAY'); 

3.

SELECT STAFF_NAME, ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED FROM STAFF_MASTER ORDER BY MONTHS_WORKED DESC;

4.

SELECT * FROM STAFF_MASTER WHERE TO_CHAR(HIREDATE,'DD') BETWEEN 1 AND 15 AND TO_CHAR(HIREDATE,'MONTH')LIKE '%DECEMBER%';

5.

SELECT STAFF_NAME, STAFF_SAL,
CASE
WHEN STAFF_SAL>=50000 THEN 'A'
WHEN STAFF_SAL>=25000 AND STAFF_SAL<50000 THEN 'B'
WHEN STAFF_SAL>=10000 AND STAFF_SAL<25000 THEN 'C'
ELSE 'D'
END AS GRADE 
FROM STAFF_MASTER;

6.

SELECT STAFF_NAME,HIREDATE,TO_CHAR(HIREDATE,'DAY') AS DAY FROM STAFF_MASTER ORDER BY (NEXT_DAY(HIREDATE, 'MONDAY')-HIREDATE) DESC;


7.

select instr('mississippi','i',2,3) from dual;


8.
SELECT TO_CHAR(NEXT_DAY(SYSDATE,'TUESDAY'),'DD MONTH YY') AS HIRE_DATE,TO_CHAR(HIREDATE,'DAY') AS DAY FROM STAFF_MASTER ORDER BY TO_CHAR(HIREDATE,'DAY') DESC;



9.

SELECT STUDENT_CODE,STUDENT_NAME,DECODE(DEPT_CODE,20,'ELECTRICALS',30,'ELECTRONICS','OTHERS') DEPT_NAME FROM STUDENT_MASTER;

--EXCERCISE 2.2

1.

SELECT MAX(STAFF_SAL) AS MAXIMUM, MIN(STAFF_SAL) AS MINIMUM, SUM(STAFF_SAL) AS TOTAL, ROUND(AVG(STAFF_SAL)) AS AVERAGE FROM STAFF_MASTER GROUP BY DEPT_CODE;

2.

SELECT DEPTNO,COUNT(EMPNO) AS "TOTAL NO OF MANAGERS" FROM EMP WHERE JOB='MANAGER' GROUP BY DEPTNO;

3.

SELECT DEPTNO,SUM(SAL) FROM EMP WHERE JOB!='MANAGER' GROUP BY DEPTNO HAVING SUM(SAL)>20000;

--EXCERCISE 3.1

1.

SELECT S.STAFF_NAME,D.DEPT_CODE,D.DEPT_NAME FROM DEPARTMENT_MASTER D INNER JOIN STAFF_MASTER S ON S.DEPT_CODE=D.DEPT_CODE WHERE S.STAFF_SAL>20000;

2.

SELECT S.STAFF_CODE AS STAFF#,S.STAFF_NAME AS STAFF,D.DEPT_NAME,S.MGR_CODE AS MGR#,S1.STAFF_NAME AS MANAGER FROM STAFF_MASTER S,STAFF_MASTER S1,DEPARTMENT_MASTER D
WHERE S.DEPT_CODE=D.DEPT_CODE AND S.MGR_CODE=S1.STAFF_CODE ORDER BY S.STAFF_CODE;

3.

SELECT S.STUDENT_CODE,S.STUDENT_NAME,B.BOOK_NAME,BT.BOOK_CODE FROM BOOK_TRANSACTIONS BT INNER JOIN STUDENT_MASTER S ON S.STUDENT_CODE=BT.STUDENT_CODE INNER JOIN BOOK_MASTER B ON B.BOOK_CODE=BT.BOOOK_CODE=BT.BOOK_CODE WHERE BOOK_EXPECTED_RETURN_DATE=SYSDATE;

4.

SELECT S.STAFF_CODE,S.STAFF_NAME,DM.DEPT_NAME,DEM.DESIGN_NAME,BM.BOOK_CODE,BM.BOOK_NAME,BT.BOOK_ISSUE_DATE FROM STAFF_MASTER S
INNER JOIN DEPARTMENT_MASTER DM ON DM.DEPT_CODE=S.DEPT_CODE
INNER JOIN DESIGNATION_MASTER DEM ON S.DESIGN_CODE=DEM.DESIGN_CODE
INNER JOIN BOOK_TRANSACTONS BT ON BT.STAFF_CODES=S.STAFF_CODE
INNER JOIN BOOK_MASTER BM ON BM.BOOK_CODE=BT.BOOK_CODE
WHERE (TO_DATE(SYSDATE)-TO_DATE(BT.BOOK_ISSUE_ISSUE_DATE))<31;


5.
SELECT S.STAFF_CODE,S.STAFF_NAME,DES.DESIGN_NAME,DEP.DEPT_NAME,B.BOOK_CODE,B.BOOK_NAME,B.BOOK_PUB_AUTHOR,BT.BOOK_ACTUAL_RETURN_DATE,(5*(TO_DATE(BT.BOOK_ACTUAL_RETURN_DATE)-TO_DATE(BOOK_EXPECTED_RETURN_DATE))) AS FINE
FROM STAFF_MASTER S,DESIGNATION_MASTER DES,DEPARTMENT_MASTER DEP,BOOK_MASTER B,BOOK_TRANSACTIONS BT WHERE S.DESIGN_CODE=DES.DESIGN_CODE AND S.DEPT_CODE=DEP.DEPT_CODE AND BT.STAFF_CODE=S.STAFF_CODE AND BT.BOOK_CODE=B.BOOK_CODE AND BT.BOOK_ACTUAL_RETURN_DATE IS NULL;

6.

SELECT STAFF_CODE,STAFF_NAME,STAFF_SAL FROM STAFF_MASTER WHERE STAFF_SAL<(SELECT AVG(STAFF_SAL) FROM STAFF_MASTER);

7.
SELECT BOOK_PUB_AUTHOR,BOOK_NAME FROM BOOK_MASTER WHERE BOOK_PUB_AUTHOR IN(SELECT BOOK_PUB_AUTHOR FROM BOOK_MASTER GROUP BY BOOK_PUB_AUTHOR HAVING COUNT(BOOK_PUB_AUTHOR)>1) ORDER BY BOOK_PUB_AUTHOR;

8.

SELECT S.STAFF_CODE,S.STAFF_NAME,D.DEPT_NAME FROM STAFF_MASTER S INNER JOIN DEPARTMENT_MASTER D ON S.DEPT_CODE=D.DEPT_CODE WHERE S.STAFF_CODE IN (SELECT STAFF_CODE FROM BOOK_TRANSACTIONS GROUP BY STAFF_CODE HAVING COUNT(STAFF_CODE)>1);
 
9.

SELECT STUDENT_CODE,STUDENT_NAME,DEPT_NAME FROM STUDENT_MASTER S INNER JOIN DEPARTMENT_MASTER D ON S.DEPT_CODE=D.DEPT_CODE
WHERE D.DEPT_CODE IN (SELECT DEPT_CODE FROM STUDENT_MASTER HAVING (COUNT(STUDENT_CODE))=(SELECT MAX(COUNT(STUDENT_CODE)) FROM STUDENT_MASTER GROUP BY DEPT_CODE);

10.

SELECT S.STAFF_CODE,S.STAFF_NAME,D.DEPT.NAME,DM.DESIGN_NAME FROM STAFF_MASTER S INNER JOIN DEPARTMENT_MASTER D ON D.DEPT_CODE=S.DEPT_CODE INNER JOIN DESIGNATION_MASTER DM ON DM.DESIGN_CODE=S.DESIGN_CODE WHERE (MONTHS_BETWEEN(SYSDATE,S.HIREDATE))<=90;

11.

SELECT S1.STAFF_NAME,COUNT(S.STAFF_CODE) AS TOTALNUMBEROFMANAGRS FROM STAFF_MASTER S INNER JOIN STAFF_MASTER S1 ON S.MGR_CODE=S1.STAFF_CODE GROUP BY S1.STAFF_NAME ORDER BY S1.STAFF_NAME;

12.

SELECT BT.BOOK_CODE,STUDENT_CODE,STAFF_CODE,STAFF_CODE,BT.BOOK_ISSUE_DATE,BT.BOOK_EXPECTED_RETURN_DATE,BT.BOOK_ACTUAL_RETURN_DATE,BM.BOOK_NAME,BM.BOOK_NAME,BM.BOOK_PUB_AUTHOR,BM.BOOK_PUB_YEAR
FROM BOOK_TRANSACTIONS BT INNER JOIN BOOK_MASTER BM ON BT.BOOK_CODE=BM.BOOK_CODE; 
 
13.
SELECT S.DEPT_CODE,DEPT_NAME,COUNT(STAFF_CODE) AS TOTALPEOPLE FROM DEPARTMENT_MASTER D INNER JOIN STAFF_MASTER S ON S.DEPT_CODE=D.DEPT_CODE GROUP BY S.DEPT_CODE,DEPT_NAME;




--EXCERCISE 4.1



CREATE TABLE CUSTOMER_1(
CUSTOMERID NUMBER(05),
CUST_NAME VARCHAR2(20),
ADDRESS1 VARCHAR2(30),
ADDRESS2 VARCHAR2(30)
);



ALTER TABLE CUSTOMER_1
MODIFY CUST_NAME VARCHAR2(20);



ALTER TABLE CUSTOMER_1
RENAME CUST_NAME TO CUSTOMERNAME;



ALTER TABLE CUSTOMER_1
MODIFY CUSTOMERNAME NOT NULL;

ALTER TABLE CUSTOMER_1
ADD (GENDER VARCHAR2(1),AGE NUMBER(3),PHONENO NUMBER(10));


ALTER TABLE CUSTOMER_1
RENAME CUSTOMER_1 TO CUST_TABLE;


INSERT INTO CUST_TABLE VALUES(1000,'ALLEN','#115 CHICAGO','#115 CHICAGO','M',25, 7878776);
INSERT INTO CUST_TABLE VALUES(1001,'GEORGE','#116 FRANCE','#116 FRANCE','M',25, 434524);
INSERT INTO CUST_TABLE VALUES(1002,'BECKER','#114 NEWYORK','#114 NEWYORK','M',45, 431525);



ALTER TABLE CUST_TABLE
ADD CONSTRAINT CUSTID_PRIM PRIMARY KEY(CUSTOMERID);



INSERT INTO CUST_TABLE VALUES(1002, 'JOHN', '#114 CHICAGO', '#114 CHICAGO', 'M', 45, 439525);



ALTER TABLE CUST_TABLE
DISABLE CONSTRAINT CUSTID_PRIM;


INSERT INTO CUST_TABLE VALUES(1002, 'BECKER', '#114 NEW YORK', '#114 NEW YORK', 'M', 45, 431525);
INSERT INTO CUST_TABLE VALUES(1003, 'NANAPATEKAR', '#115 INDIA', '#115 INDIA', 'M', 45, 431525);



ALTER TABLE CUST_TABLE;
ENABLE CONSTRAINT CUSTID_PRIM;



ALTER TABLE CUST_TABLE;
DROP PRIMARY KEY;



INSERT INTO CUST_TABLE VALUES(1002, 'BECKER', '#114 NEW YORK', '#114 NEW YORK', 'M', 45, 431525, 15000.50);
INSERT INTO CUST_TABLE VALUES(1003, 'NANAPATEKAR', '#115 INDIA', '#115 INDIA', 'M', 45, 431525, 20000.50);



TRUNCATE TABLE CUST_TABLE;



ALTER TABLE CUST_TABLE
ADD E_MAIL VARCHAR2(50);



ALTER TABLE CUST_TABLE
DROP COLUMN E_MAIL;



CREATE TABLE CUSTOMER_1(
CUSTOMERID NUMBER(5), CUSTOMERNAME VARCHAR2(30), ADDRESS1 VARCHAR2(50), ADDRESS2(50), PHONENO NUMBER(10)
);



CREATE TABLE SUPPLIERS AS( SELECT CUSTOMERID AS SUPPID, CUSTOMERNAME AS SNAME, ADDRESS1 AS ADDR1, ADDRESS2 AS ADDR2, PHONENO AS CONTACTNO FROM CUSTOMER_1);



DROP TABLE CUSTOMER_1;
DROP TABLE SUPPLIERS;



CREATE TABLE CUSTOMERMASTER(
CUSTOMERID NUMBER(5),
CUSTOMERNAME VARCHAR2(30) NOT NULL,
ADDRESS1 VARCHAR2(30) NOT NULL,
ADDRESS2 VARCHAR2(30),
GENDER VARCHAR2(1),
AGE NUMBER(3),
PHONENO NUMBER(10);
CONSTRAINT CUSTID_PK PRIMARY KEY(CUSTOMERID);



CREATE TABLE ACCOUNTMASTER(
CUSTOMERID NUMBER(5),
ACCOUNTNUMBER NUMBER(10) PRIMARY KEY (ACNO);
ACCOUNTTYPE CHAR(3),
LEDGERBALANCE NUMBER(10) NOT NULL
);



CREATE SEQUENCE SEQ_ANO
MINVALUE 101
MAXVALUE 10000
START WITH 101
INCREMENT BY 1
CACHE 101;


INSERT INTO CUSTOMERMASTER VALUES(1000, 'ALLEN', '#115 CHICAGO', '#115 CHICAGO', 'M', 25, 7878776);	  
INSERT INTO CUSTOMERMASTER VALUES(1001, 'GEORGE', '#116 FRANCE', '#116 FRANCE', 'M', 25, 434524);	         
INSERT INTO CUSTOMERMASTER VALUES(1002, 'BECKER', '#114 NEW YORK', '#114 NEW YORK', 'M', 45, 431525);	  



ALTER TABLE ACCOUNTMASTER 
ADD CONSTRAINT CUST_ACC FOREIGN KEY(CUSTOMERID) 
REFERENCES CUSTOMERMASTER(CUSTOMERID);



ALTER TABLE ACCOUNTMASTER 
ADD CONSTRAINT CK_AC CHECK(ACCOUNTTYPE='NRI' OR ACCOUNTTYPE='IND');



ALTER TABLE ACCOUNTMASTER 
ADD CONSTRAINT BALANCE_CHECK(LEDGER BALANCE > 5000);



ALTER TABLE ACCOUNTMASTER,CUSTOMERTABLE WHERE CUSTOMERID = 1001;



CREATE TABLE ACCOUNTDETAILS AS (SELECT * FROM ACCOUNTMASTER);


CREATE VIEW ACC_VIEW AS SELECT(CUSTOMERID,CUSTOMERNAME,ACCOUNTNUMBER,ACCOUNTTYPE,LEDGERBALANCE)
FROM ACCOUNTMASTER;


CREATE VIEW VACCS_DTLS AS SELECT ACCOUNTTYPE,LEDGERBALANCE FROM ACCOUNTMASTER WHERE ACCOUNTTYPE = 'IND' AND LEDGERBALANCE < 10000;
 
 
CREATE SEQUENCE SEQ_DEPT MINVALUE 40 START WITH 40
INCREMENT BY MAX VALUE 200 CACHE 40;


CREATE TABLE DEPARTMENTMASTER(DEPTNO NUMBER(50),DNAME VARCHAR2(25),LOCATION VARCHAR2(25));
INSERT INTO DEPARTMENTMASTER VALUES(SEQ_DEPT.NEXTVAL,'MARKETING', 'NEW DELHI');
INSERT INTO DEPARTMENTMASTER VALUES(SEQ_DEPT.NEXTVAL,'SALES', 'CHENNAI');
INSERT INTO DEPARTMENTMASTER VALUES(SEQ_DEPT.NEXTVAL,'RESEARCH', 'BOSTON');


DROP SEQUENCE SEQ_DEPT;


CREATE INDEX NO_NAME ON EMP(EMPNO);
SELECT * FROM EMP;



CREATE SYNONYM SYNEMP FOR EMP;



SELECT * FROM SYNEMP;

CREATE INDEX IDX_EMP_HIREDATE ON EMP(HIREDATE);


CREATE SEQUENCE SEQ_EMP MINVALUE 1001 START WITH 1001
INCREMENT BY 1 CACHE 1001;
 


--EXCERCISE 5.1


CREATE TABLE EMPLOYEE AS SELECT * FROM EMP;


DESC EMPLOYEE;

SELECT * FROM EMPLOYEE;

UPDATE EMPLOYEE SET JOB=(SELECT JOB FROM EMPLOYEE WHERE EMPNO=7788),DEPTNO=(SELECT DEPTNO FROM EMPLOYEE WHERE EMPNO=7788) WHERE EMPNO=7698;

DELETE FROM DEPARTMENT WHERE DEPT_NAME='SALES';
DELETE FROM DEPARTMENT WHERE DEPT_NAME='SALES';

DELETE FROM DEPARTMENT_MASTER WHERE DEPT_NAME='SALES';

UPDATE EMPLOYEE SET EMPNO=7788 WHERE EMPNO=7698;

INSERT INTO EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COLUMN,DEPTNO) VALUES(1000, 'ALLEN', 'CLERK', 1001, '12-JAN-01', 3000, 2, 10);

INSERT INTO EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COLUMN,DEPTNO) VALUES(1001, 'GEORGE', 'ANALYST', NULL, '08-SEP-1992', 5000, 0, 10);

INSERT INTO EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COLUMN,DEPTNO) VALUES(1002, 'BECKER', 'MANAGER', 1000, '04-NOV-1992', 2800, 4, 20);

INSERT INTO EMP (EMPNO,ENAME,JOB,MGR,HIREDATE,SAL,COLUMN,DEPTNO) VALUES(1003, 'BILL', 'CLERK', 1002, '04-NOV-1992', 3000, 0, 20);


--EXCERCISE 6.1

INSERT INTO CUSTOMERMASTER (CUSTOMERID,CUSTOMERNAME,ADDRESS1,ADDRESS2,GENDER,AGE,PHONENO) VALUES (6000, 'JOHN', '#115 CHICAGO', '#115 CHICAGO', 'M', 25, 7878776, 10000);
INSERT INTO CUSTOMERMASTER (CUSTOMERID,CUSTOMERNAME,ADDRESS1,ADDRESS2,GENDER,AGE,PHONENO) VALUES (6001, 'JACK', '#116 FRANCE', '#116 FRANCE', 'M', 25, 434524, 20000);
INSERT INTO CUSTOMERMASTER (CUSTOMERID,CUSTOMERNAME,ADDRESS1,ADDRESS2,GENDER,AGE,PHONENO) VALUES (6002, 'JAMES', '#114 NEW YORK', '#114 NEW YORK', 'M', 45, 431525, 15000.50);


SAVEPOINT P1;




























